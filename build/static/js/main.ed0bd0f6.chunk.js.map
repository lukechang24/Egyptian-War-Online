{"version":3,"sources":["Components/Firebase/context.js","Components/Firebase/firebase.js","Components/Firebase/index.js","Components/Game/style.js","Components/Game/index.js","Components/Room/cards.js","Components/Room/index.js","Components/App/style.js","Components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","createRoom","db","collection","findRoom","id","doc","app","this","database","auth","S","Container1","styled","div","PlayerContainer","position","Container2","Hand","img","speed","CardContainer","CardBack","layer","Pile","Card","skew","translateX","translateY","Name","h1","StartButton","button","Game","unsubscribe","startGame","match","params","get","then","snap","updatedPlayers","data","players","randomNum","Math","floor","random","length","whoseTurn","pile","deck","forEach","player","hand","splice","console","log","concat","update","phase","prepareCard","setTimeout","placeCard","playerId","localStorage","getItem","updatedPile","updatedTurn","royalCount","whoseRoyal","i","updatedHand","placedCard","pop","push","rank","reverse","prepareSlap","whoseSlapping","slap","burn","clearTimeout","burnedCard","unshift","createDelay","rotateIds","arr","updatedArr","checkIfExists","document","addEventListener","e","which","indexOf","map","cardBacks","slice","card","className","key","src","name","imgUrl","audio","type","autoPlay","disabled","onClick","withRouter","cards","suit","Room","state","playSound","generateRandomId","toString","substring","shuffle","a","j","x","test","setState","randomId","setItem","exists","set","master","onSnapshot","snapshot","App","exact","path","render","Boolean","window","location","hostname","ReactDOM","Provider","value","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ed0bd0f6.chunk.js","sourcesContent":["import React from 'react'\n\nconst FirebaseContext = React.createContext(null)\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;\n","import * as app from 'firebase/app'\nimport 'firebase/firebase-firestore'\nimport 'firebase/database'\nimport \"firebase/auth\"\n\nconst config = {\n  apiKey: \"AIzaSyBWxMmUdKeRYfvPFKe5dsto2RdprUf7MtA\",\n  authDomain: \"egyptian-war.firebaseapp.com\",\n  databaseURL: \"https://egyptian-war.firebaseio.com\",\n  projectId: \"egyptian-war\",\n  storageBucket: \"egyptian-war.appspot.com\",\n  messagingSenderId: 526714168101,\n}\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config)\n    this.database = app.database()\n    this.db = app.firestore()\n    this.auth = app.auth()\n  }\n  createRoom = () => {\n    return this.db.collection(\"rooms\")\n  }\n  findRoom = (id) => {\n    return this.db.collection(\"rooms\").doc(id)\n  }\n}\n\nexport default Firebase","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import styled from \"styled-components\"\n\nconst S = {}\n\nS.Container1 = styled.div`\n    position: relative;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow-x: hidden;\n`\n\nS.PlayerContainer = styled.div`\n    position: absolute;\n    top: ${props => props.position === \"bottom\" ? \"calc(100vh - 250px)\" : props.position === \"top\" ? 0 : props.position === \"left\" || props.position === \"right\" ? \"calc(calc((100vh - 250px)/2))\" : 0};\n    left: ${props => props.position === \"bottom\" || props.position === \"top\" ? \"calc((100vw - 250px)/2)\" : props.position === \"left\" ? 0 : props.position === \"right\" ? \"calc(100vw - 250px)\" : 0};\n    width: 250px;\n    height: 250px;\n    display: flex;\n    flex-direction: ${props => props.position === \"bottom\" ? \"column-reverse\" : \"column\"};\n    justify-content: center;\n    align-items: center;\n    background-color: lightblue;\n    border: 5px solid white;\n    &.highlight {\n        border: 5px solid greenyellow;\n    }\n`\n\nS.Container2 = styled.div`\n    width: ${props => props.position === \"left\" || props.position === \"right\" ? \"auto\" : \"100%\"};\n    height: ${props => props.position === \"left\" || props.position === \"right\" ? \"100%\" : \"auto\"};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transform: ${props => props.position === \"top\" ? \"rotate(180deg)\" : props.position === \"left\" ? \"rotate(90deg)\" : props.position === \"right\" ? \"rotate(270deg)\" : 0};\n`\n\nS.Hand = styled.img`\n    width: 100px;\n    z-index: 100;\n    transition: ${props => props.speed === \"slower\" ? \"5s linear\" : \"0.1s linear\" };\n    &.move {\n        transform: translate(-50px, calc(-100vh/2 + 102.5px));\n    }\n`\n\nS.CardContainer = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    margin-top: 25px;\n`\n\nS.CardBack = styled.img`\n    /* position: absolute; */\n    /* bottom: 100%;\n    left: 100%; */\n    /* top: -${props => props.layer ? props.layer * 2 : 0}px; */\n    width: 102.5px;\n    transition: 0.2s linear;\n    &.move {\n        transform: translate(75px, calc(-100vh/2 + 102.5px));\n    }\n`\nS.Pile = styled.div`\n    position: relative;\n    width: 250px;\n    height: 250px;\n    z-index: -1;\n`\n\nS.Card = styled.img`\n    position: absolute;\n    right: 0;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    width: 100px;\n    transform: ${props => `rotate(${props.skew}deg) translate(${props.translateX}px, ${props.translateY}px)`};\n    border: 1px solid black;\n    border-radius: 15px;\n`\n\nS.Name = styled.h1`\n\n`\n\nS.StartButton = styled.button`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100px;\n    height: 50px;\n`\n\nexport default S","import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { withFirebase } from \"../Firebase\"\nimport S from \"./style\"\n\nclass Game extends Component {\n    unsubscribe = null\n    componentDidMount() {\n        const playerId = localStorage.getItem(\"id\")\n        document.addEventListener(\"keydown\", (e) => {\n            if(this.props.phase === \"idle\" && e.which === 38 && playerId === this.props.whoseTurn) {\n                this.prepareCard()\n            } else if(e.which === 32 && this.props.pile.length > 0 && this.props.whoseSlapping.indexOf(playerId) < 0) {\n                // const slapSound = new Audio(\"audio/slap.mp3\")\n                // slapSound.play()\n                // slapSound.volume = 0.2\n                this.prepareSlap()\n            }\n        })\n    }\n    startGame = () => {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                let updatedPlayers = snap.data().players\n                let randomNum = Math.floor(Math.random() * updatedPlayers.length)\n                let whoseTurn = updatedPlayers[randomNum].id\n                let pile = this.props.deck\n                updatedPlayers.forEach(player => {\n                    player.hand = pile.splice(0, Math.floor(52/this.props.players.length))\n                })\n                console.log(pile)\n                updatedPlayers[randomNum].hand = updatedPlayers[randomNum].hand.concat(pile)\n                this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, whoseTurn, phase: \"idle\"})\n            })\n    }\n    prepareCard = () => {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                this.props.firebase.findRoom(snap.id).update({phase: \"playing\"})\n                setTimeout(() => {\n                    // this.props.firebase.findRoom(snap.id).update({phase: \"idle\"})\n                    this.placeCard()\n                }, 100)\n            })\n    }\n    placeCard = () => {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                const playerId = localStorage.getItem(\"id\")\n                // if(playerId === snap.data().whoseTurn) {\n                    let updatedPlayers = snap.data().players\n                    let updatedPile = snap.data().pile\n                    let updatedTurn = null\n                    let royalCount = null\n                    let whoseRoyal = null\n                    for(let i = 0; i < updatedPlayers.length; i++) {\n                        if(updatedPlayers[i].id === playerId) {\n                            let updatedHand = updatedPlayers[i].hand\n                            let placedCard = updatedHand.pop()\n                            placedCard.skew = (Math.random() * 100)-50\n                            placedCard.translateX = (Math.random() * 30)-15\n                            placedCard.translateY = (Math.random() * 30)-15\n                            updatedPile.push(placedCard)\n                            updatedPlayers[i].hand = updatedHand\n                            royalCount = placedCard.rank === \"jack\" ? 1 : placedCard.rank === \"queen\" ? 2 : placedCard.rank === \"king\" ? 3 : placedCard.rank === \"ace\" ? 4 : null\n                            whoseRoyal = royalCount > 0 ? playerId : snap.data().whoseRoyal\n                            updatedTurn = i === updatedPlayers.length-1 ? updatedPlayers[0].id : updatedPlayers[i+1].id\n                        }\n                    }\n                    if(snap.data().royalCount > 1 && !royalCount) {\n                        console.log(\"i went first\")\n                        royalCount = snap.data().royalCount - 1\n                        updatedTurn = playerId\n                    } else if(snap.data().royalCount === 1 && !royalCount) {\n                        this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, phase: \"finished\"})\n                        this.unsubscribe = setTimeout(() => {\n                            for(let i = 0; i < updatedPlayers.length; i++) {\n                                if(updatedPlayers[i].id === snap.data().whoseRoyal) {\n                                    const updatedHand = updatedPlayers[i].hand.reverse().concat(updatedPile)\n                                    updatedPlayers[i].hand = updatedHand.reverse()\n                                    updatedPile = []\n                                    whoseRoyal = null\n                                    royalCount = null\n                                    updatedTurn = updatedPlayers[i].id\n                                    console.log(updatedTurn, \"updated\")\n                                    this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, royalCount, whoseRoyal, whoseTurn: updatedTurn, phase: \"idle\"})\n                                }\n                            }\n                        }, 3000)\n                        return\n                    }\n                    this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, royalCount, whoseRoyal, whoseTurn: updatedTurn, phase: \"idle\"})\n                // } else {\n                //     console.log(\"not your turn\")\n                // }\n            })\n    }\n    prepareSlap = () => {\n        const playerId = localStorage.getItem(\"id\")\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                this.props.firebase.findRoom(snap.id).update({phase: \"slapping\", whoseSlapping: [...snap.data().whoseSlapping, playerId]})\n                setTimeout(() => {\n                    this.slap()\n                }, 1500)\n            })\n    }\n    slap = () => {\n        const playerId = localStorage.getItem(\"id\")\n        let pile = [...this.props.pile]\n        if(pile.length <= 1 || (pile[pile.length-1].rank !== pile[pile.length-2].rank && pile.length === 2)) {\n            if(pile.length === 0) {\n                return\n            }\n            this.burn()\n            return\n        }\n        if(pile[pile.length-1].rank === pile[pile.length-2].rank || pile[pile.length-1].rank === pile[pile.length-3].rank) {\n            clearTimeout(this.unsubscribe)\n            this.props.firebase.findRoom(this.props.match.params.id).get()\n                .then(snap => {\n                    let updatedPlayers = snap.data().players\n                    let whoseRoyal = null\n                    let royalCount = null\n                    let updatedTurn = snap.data().whoseTurn\n                    let phase = \"idle\"\n                    for(let i = 0; i < updatedPlayers.length; i++) {\n                        if(updatedPlayers[i].id === playerId && this.props.whoseSlapping[0] === updatedPlayers[i].id) {\n                            const updatedHand = updatedPlayers[i].hand.reverse().concat(pile)\n                            updatedPlayers[i].hand = updatedHand.reverse()\n                            updatedTurn = updatedPlayers[i].id\n                        }\n                    }\n                    this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: [], royalCount, whoseRoyal, whoseTurn: updatedTurn, phase, whoseSlapping: []})\n                })\n        } else {\n            if(playerId === this.props.whoseSlapping[0]) {\n                console.log(\"IM HERE\", this.props.whoseSlapping)\n                this.burn()\n            }\n        }\n    }\n    burn = () => {\n        const playerId = localStorage.getItem(\"id\")\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                let updatedPlayers = snap.data().players\n                let updatedPile = snap.data().pile\n                let phase = \"idle\"\n                for(let i = 0; i < updatedPlayers.length; i++) {\n                    if(updatedPlayers[i].id === playerId) {\n                        let updatedHand = updatedPlayers[i].hand\n                        const burnedCard = updatedHand.pop()\n                        burnedCard.skew = (Math.random() * 360)-180\n                        burnedCard.translateX = (Math.random() * 30)-15\n                        burnedCard.translateY = (Math.random() * 30)-15\n                        updatedPile.unshift(burnedCard)\n                        updatedPlayers[i].hand = updatedHand\n                    }\n                }\n                this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, phase, whoseSlapping: []})\n            })\n    }\n    createDelay = () => {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                let updatedPlayers = snap.data().players\n                let updatedPile = snap.data().pile\n                let royalCount = null\n                let whoseRoyal = null\n                let phase = \"idle\"\n                this.unsubscribe = setTimeout(() => {\n                    for(let i = 0; i < updatedPlayers.length; i++) {\n                        if(updatedPlayers[i].id === snap.data().whoseRoyal) {\n                            const updatedHand = updatedPlayers[i].hand.reverse().concat(updatedPile)\n                            updatedPlayers[i].hand = updatedHand.reverse()\n                            updatedPile = []\n                            whoseRoyal = null\n                            royalCount = null\n                            this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, royalCount, whoseRoyal, phase})\n                            return\n                        }\n                    }\n                }, 1000)\n            })\n    }\n    rotateIds = (id, arr) => {\n        let updatedArr = [...arr]\n        if(this.props.checkIfExists(id, updatedArr)) {\n            while(updatedArr[0].id !== id) {\n                updatedArr.unshift(updatedArr.pop())\n            }\n        } else {\n            console.log(\"id not found\")\n        }\n        return updatedArr\n    }\n    render() {\n        const playerId = localStorage.getItem(\"id\")\n        const players = this.rotateIds(playerId, this.props.players).map((player, i, arr) => {\n            const cardBacks = player.hand.slice(0, 1).map((card, i) => {\n                return(\n                    <S.CardBack className={this.props.phase === \"playing\" && this.props.whoseTurn === player.id && i === 0 ? \"move\" : \"\"} key={i} layer={i} src=\"images/back2.png\"></S.CardBack>\n                )\n            })\n            return(\n                <S.PlayerContainer key={i} className={this.props.whoseTurn === player.id ? \"highlight\" : \"\"} position={i === 0 ? \"bottom\" : i === 1 && arr.length === 2 ? \"top\" : i === 1 && arr.length === 3 || i === 1 && arr.length === 4 ? \"left\" : i === 2 && arr.length === 3 ? \"right\" : i === 2 && arr.length === 4 ? \"top\" : \"right\"}>\n                    <S.Container2 position={i === 0 ? \"bottom\" : i === 1 && arr.length === 2 ? \"top\" : i === 1 && arr.length === 3 || i === 1 && arr.length === 4 ? \"left\" : i === 2 && arr.length === 3 ? \"right\" : i === 2 && arr.length === 4 ? \"top\" : \"right\"}>\n                        <S.CardContainer>\n                            {cardBacks}\n                        </S.CardContainer>\n                        <S.Hand src=\"images/hand.png\" className={this.props.phase === \"slapping\" && this.props.whoseSlapping.indexOf(player.id) >= 0 ? \"move\" : \"\"} ></S.Hand>\n                    </S.Container2>\n                    <S.Name>{player.name}</S.Name>\n                    <h1>{player.hand.length}</h1>\n                </S.PlayerContainer>\n            )\n        })\n        const pile = this.props.pile.map((card, i) => {\n            return(\n                    <S.Card key={i} skew={card.skew} translateX={card.translateX} translateY={card.translateY} src={card.imgUrl}></S.Card>\n            )\n        })\n        const audio = this.props.players.map(player => {\n            return(\n                <audio src=\"audio/slap.mp3\" type=\"audio/mpeg\" autoPlay={this.props.phase === \"slapping\" && this.props.whoseSlapping.indexOf(player.id) >= 0 ? true : false}></audio>\n            )\n        })\n        return(\n            <S.Container1>\n                <S.StartButton disabled={this.props.phase === \"idle\" || this.props.phase === \"playing\" ? true : false} onClick={() => this.startGame()}>Start</S.StartButton>\n                {players}\n                <S.Pile>\n                    {pile}\n                </S.Pile>\n                {\n                    this.props.phase === \"slapping\"\n                        ?\n                            <>\n                                {audio}\n                            </>\n                        :\n                            null\n                }\n            </S.Container1>\n        )\n    }\n}\n\nexport default withRouter(withFirebase(Game))","const cards = [\n\t{\n\t\trank: \"two\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/2oD.png\",\n\t\tid: \"#2oD\"\n\t},\n\t{\n\t\trank: \"two\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/2oH.png\",\n\t\tid: \"#2oH\"\n\t},\n\t{\n\t\trank: \"two\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/2oC.png\",\n\t\tid: \"#2oC\"\n\t},\n\t{\n\t\trank: \"two\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/2oS.png\",\n\t\tid: \"#2oS\"\n\t},\n\t{\n\t\trank: \"three\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/3oD.png\",\n\t\tid: \"#3oD\"\n\t},\n\t{\n\t\trank: \"three\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/3oH.png\",\n\t\tid: \"#3oH\"\n\t},\n\t{\n\t\trank: \"three\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/3oC.png\",\n\t\tid: \"#3oC\"\n\t},\n\t{\n\t\trank: \"three\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/3oS.png\",\n\t\tid: \"#3oS\"\n\t},\n\t{\n\t\trank: \"four\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/4oD.png\",\n\t\tid: \"#4oD\"\n\t},\n\t{\n\t\trank: \"four\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/4oH.png\",\n\t\tid: \"#4oH\"\n\t},\n\t{\n\t\trank: \"four\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/4oC.png\",\n\t\tid: \"#4oC\"\n\t},\n\t{\n\t\trank: \"four\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/4oS.png\",\n\t\tid: \"#4oS\"\n\t},\n\t{\n\t\trank: \"five\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/5oD.png\",\n\t\tid: \"#5oD\"\n\t},\n\t{\n\t\trank: \"five\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/5oH.png\",\n\t\tid: \"#5oH\"\n\t},\n\t{\n\t\trank: \"five\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/5oC.png\",\n\t\tid: \"#5oC\"\n\t},\n\t{\n\t\trank: \"five\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/5oS.png\",\n\t\tid: \"#5oS\"\n\t},\n\t{\n\t\trank: \"six\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/6oD.png\",\n\t\tid: \"#6oD\"\n\t},\n\t{\n\t\trank: \"six\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/6oH.png\",\n\t\tid: \"#6oH\"\n\t},\n\t{\n\t\trank: \"six\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/6oC.png\",\n\t\tid: \"#6oC\"\n\t},\n\t{\n\t\trank: \"six\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/6oS.png\",\n\t\tid: \"#6oS\"\n\t},\n\t{\n\t\trank: \"seven\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/7oD.png\",\n\t\tid: \"#7oD\"\n\t},\n\t{\n\t\trank: \"seven\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/7oH.png\",\n\t\tid: \"#7oH\"\n\t},\n\t{\n\t\trank: \"seven\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/7oC.png\",\n\t\tid: \"#7oC\"\n\t},\n\t{\n\t\trank: \"seven\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/7oS.png\",\n\t\tid: \"#7oS\"\n\t},\n\t{\n\t\trank: \"eight\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/8oD.png\",\n\t\tid: \"#8oD\"\n\t},\n\t{\n\t\trank: \"eight\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/8oH.png\",\n\t\tid: \"#8oH\"\n\t},\n\t{\n\t\trank: \"eight\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/8oC.png\",\n\t\tid: \"#8oC\"\n\t},\n\t{\n\t\trank: \"eight\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/8oS.png\",\n\t\tid: \"#8oS\"\n\t},\n\t{\n\t\trank: \"nine\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/9oD.png\",\n\t\tid: \"#9oD\"\n\t},\n\t{\n\t\trank: \"nine\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/9oH.png\",\n\t\tid: \"#9oH\"\n\t},\n\t{\n\t\trank: \"nine\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/9oC.png\",\n\t\tid: \"#9oC\"\n\t},\n\t{\n\t\trank: \"nine\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/9oS.png\",\n\t\tid: \"#9oS\"\n\t},\n\t{\n\t\trank: \"ten\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/10oD.png\",\n\t\tid: \"#10oD\"\n\t},\n\t{\n\t\trank: \"ten\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/10oH.png\",\n\t\tid: \"#10oH\"\n\t},\n\t{\n\t\trank: \"ten\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/10oC.png\",\n\t\tid: \"#10oC\"\n\t},\n\t{\n\t\trank: \"ten\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/10oS.png\",\n\t\tid: \"#10oS\"\n\t},\n\t{\n\t\trank: \"jack\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/JoD.png\",\n\t\tid: \"#JoD\"\n\t},\n\t{\n\t\trank: \"jack\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/JoH.png\",\n\t\tid: \"#JoH\"\n\t},\n\t{\n\t\trank: \"jack\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/JoC.png\",\n\t\tid: \"#JoC\"\n\t},\n\t{\n\t\trank: \"jack\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/JoS.png\",\n\t\tid: \"#JoS\"\n\t},\n\t{\n\t\trank: \"queen\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/QoD.png\",\n\t\tid: \"#QoD\"\n\t},\n\t{\n\t\trank: \"queen\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/QoH.png\",\n\t\tid: \"#QoH\"\n\t},\n\t{\n\t\trank: \"queen\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/QoC.png\",\n\t\tid: \"#QoC\"\n\t},\n\t{\n\t\trank: \"queen\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/QoS.png\",\n\t\tid: \"#QoS\"\n\t},\n\t{\n\t\trank: \"king\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/KoD.png\",\n\t\tid: \"#KoD\"\n\t},\n\t{\n\t\trank: \"king\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/KoH.png\",\n\t\tid: \"#KoH\"\n\t},\n\t{\n\t\trank: \"king\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/KoC.png\",\n\t\tid: \"#KoC\"\n\t},\n\t{\n\t\trank: \"king\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/KoS.png\",\n\t\tid: \"#KoS\"\n\t},\n\t{\n\t\trank: \"ace\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/AoD.png\",\n\t\tid: \"#AoD\"\n\t},\n\t{\n\t\trank: \"ace\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/AoH.png\",\n\t\tid: \"#AoH\"\n\t},\n\t{\n\t\trank: \"ace\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/AoC.png\",\n\t\tid: \"#AoC\"\n\t},\n\t{\n\t\trank: \"ace\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/AoS.png\",\n\t\tid: \"#AoS\"\n\t}\n]\n\nexport default cards","import React, { Component } from \"react\"\nimport Game from \"../Game\"\nimport { withFirebase } from \"../Firebase\"\nimport { withRouter } from \"react-router-dom\"\nimport cards from \"./cards\"\n\nclass Room extends Component {\n    state = {\n        players: [],\n        deck: [],\n        pile: [],\n        whoseTurn: \"\",\n        royalCount: null,\n        whoseRoyal: null,\n        phase: \"\",\n        whoseSlapping: [],\n        playSound: false\n    }\n    componentDidMount() {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                const randomId = localStorage.getItem(\"id\") ? localStorage.getItem(\"id\") : this.generateRandomId()\n                localStorage.setItem(\"id\", randomId)\n                if(snap.exists) {\n                    this.props.firebase.findRoom(this.props.match.params.id).get()\n                        .then(snap => {\n                            if(!this.checkIfExists(randomId, snap.data().players)) {\n                                this.props.firebase.findRoom(snap.id).update({\n                                    players: [...snap.data().players, \n                                        {\n                                            id: randomId, \n                                            name: `player${snap.data().players. length+1}`,\n                                            hand: []\n                                        }]\n                                })\n                            }\n                        })\n                } else {\n                    this.props.firebase.createRoom().doc(this.props.match.params.id).set({\n                        players: [{id: randomId, name: \"player1\", hand: []}], \n                        master: randomId, \n                        deck: [...this.shuffle(cards)],\n                        pile: [],\n                        royalCount: null,\n                        whoseRoyal: null,\n                        whoseTurn: \"\",\n                        phase: \"waiting\",\n                        whoseSlapping: []\n                    })\n                }\n                this.props.firebase.findRoom(this.props.match.params.id)\n                    .onSnapshot(snapshot => {\n                        if(randomId === this.state.whoseTurn) {\n                            setTimeout(() => {\n                                this.setState({\n                                    pile: snapshot.data().pile,\n                                })\n                            }, 350)\n                            this.setState({\n                                players: snapshot.data().players,\n                                deck: snapshot.data().deck,\n                                // pile: snapshot.data().pile,\n                                whoseTurn: snapshot.data().whoseTurn,\n                                phase: snapshot.data().phase,\n                                whoseSlapping: snapshot.data().whoseSlapping\n                            })\n                        } else {\n                            this.setState({\n                                players: snapshot.data().players,\n                                deck: snapshot.data().deck,\n                                pile: snapshot.data().pile,\n                                whoseTurn: snapshot.data().whoseTurn,\n                                phase: snapshot.data().phase,\n                                whoseSlapping: snapshot.data().whoseSlapping\n                            })\n                        }\n                        // console.log(this.state.whoseTurn)\n                    })\n            })\n    }\n    generateRandomId = () => {\n        let randomId = localStorage.getItem(\"id\") ? localStorage.getItem(\"id\") : Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n        return randomId\n    }\n    checkIfExists = (id, arr) => {\n        for (let i = 0; i < arr.length; i++) {\n            if (arr[i].id === id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    shuffle = (a) => {\n        for (let i = a.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let x = a[i];\n            a[i] = a[j];\n            a[j] = x;\n        }\n        return a;\n    }\n    test = () => {\n        this.setState({\n            playSound: this.state.playSound ? false : true\n        })\n    }\n    render() {\n        return(\n            <>\n            <Game players={this.state.players} deck={this.state.deck} pile={this.state.pile} whoseTurn={this.state.whoseTurn} phase={this.state.phase} whoseSlapping={this.state.whoseSlapping} checkIfExists={this.checkIfExists} playSound={this.state.playSound}/>\n            <button onClick={() => this.test()}>try</button>\n            </>\n        )\n    }\n}\n\nexport default withRouter(withFirebase(Room))","import styled from \"styled-components\"\n\nconst S = {}\n\nS.Container1 = styled.div`\n    height: 100vh;\n    width: 100vw;\n`\n\nexport default S","import React, { Component } from 'react';\nimport Room from \"../Room\"\nimport { Route, Switch, withRouter } from \"react-router-dom\"\nimport { withFirebase } from \"../Firebase\"\nimport S from \"./style\"\n\nclass App extends Component {\n    render() {\n        return (\n            <Switch>\n                <S.Container1>\n                    <Route exact path=\"/:id\" render={() => <Room />}></Route>\n                </S.Container1>\n            </Switch>\n        )\n    }\n}\n\nexport default withRouter(withFirebase(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport Firebase, { FirebaseContext } from './Components/Firebase';\n\nReactDOM.render(\n    <Router>\n        <FirebaseContext.Provider value={new Firebase()}>\n            <App />\n        </FirebaseContext.Provider>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}