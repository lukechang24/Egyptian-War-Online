{"version":3,"sources":["Components/Firebase/context.js","Components/Firebase/firebase.js","Components/Firebase/index.js","Components/Game/style.js","Components/Game/index.js","Components/Room/cards.js","Components/Room/index.js","Components/App/style.js","Components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","Firebase","createRoom","db","collection","findRoom","id","doc","app","this","database","auth","S","Container1","styled","div","PlayerContainer","position","Container2","Hand","img","CardContainer","CardBack","layer","Pile","Card","skew","translateX","translateY","Name","h1","StartButton","button","Game","unsubscribe","startGame","match","params","get","then","snap","updatedPlayers","data","players","randomNum","Math","floor","random","length","whoseTurn","pile","deck","forEach","player","hand","splice","console","log","concat","update","phase","prepareCard","setTimeout","placeCard","playerId","localStorage","getItem","updatedPile","updatedTurn","royalCount","whoseRoyal","i","updatedHand","placedCard","pop","push","rank","reverse","prepareSlap","whoseSlapping","slap","burn","clearTimeout","createDelay","burnedCard","unshift","rotateIds","arr","updatedArr","checkIfExists","document","addEventListener","e","which","Audio","play","map","cardBacks","slice","card","className","key","src","indexOf","name","imgUrl","disabled","onClick","withRouter","cards","suit","Room","state","generateRandomId","toString","substring","shuffle","a","j","x","randomId","exists","set","master","onSnapshot","snapshot","setState","App","exact","path","render","Boolean","window","location","hostname","ReactDOM","Provider","value","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77530eb0.chunk.js","sourcesContent":["import React from 'react'\n\nconst FirebaseContext = React.createContext(null)\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;\n","import * as app from 'firebase/app'\nimport 'firebase/firebase-firestore'\nimport 'firebase/database'\nimport \"firebase/auth\"\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config)\n    this.database = app.database()\n    this.db = app.firestore()\n    this.auth = app.auth()\n  }\n  createRoom = () => {\n    return this.db.collection(\"rooms\")\n  }\n  findRoom = (id) => {\n    return this.db.collection(\"rooms\").doc(id)\n  }\n}\n\nexport default Firebase","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import styled from \"styled-components\"\n\nconst S = {}\n\nS.Container1 = styled.div`\n    position: relative;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow-x: hidden;\n`\n\nS.PlayerContainer = styled.div`\n    position: absolute;\n    top: ${props => props.position === \"bottom\" ? \"calc(100vh - 250px)\" : props.position === \"top\" ? 0 : props.position === \"left\" || props.position === \"right\" ? \"calc(calc((100vh - 250px)/2))\" : 0};\n    left: ${props => props.position === \"bottom\" || props.position === \"top\" ? \"calc((100vw - 250px)/2)\" : props.position === \"left\" ? 0 : props.position === \"right\" ? \"calc(100vw - 250px)\" : 0};\n    width: 250px;\n    height: 250px;\n    display: flex;\n    flex-direction: ${props => props.position === \"bottom\" ? \"column-reverse\" : \"column\"};\n    justify-content: center;\n    align-items: center;\n    background-color: lightblue;\n`\n\nS.Container2 = styled.div`\n    width: ${props => props.position === \"left\" || props.position === \"right\" ? \"auto\" : \"100%\"};\n    height: ${props => props.position === \"left\" || props.position === \"right\" ? \"100%\" : \"auto\"};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transform: ${props => props.position === \"top\" ? \"rotate(180deg)\" : props.position === \"left\" ? \"rotate(90deg)\" : props.position === \"right\" ? \"rotate(270deg)\" : 0};\n`\n\nS.Hand = styled.img`\n    width: 100px;\n    z-index: 100;\n    transition: 0.1s linear;\n    &.move {\n        transform: translate(-50px, calc(-100vh/2 + 102.5px));\n    }\n`\n\nS.CardContainer = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    margin-top: 25px;\n`\n\nS.CardBack = styled.img`\n    /* position: absolute; */\n    /* bottom: 100%;\n    left: 100%; */\n    /* top: -${props => props.layer ? props.layer * 2 : 0}px; */\n    width: 102.5px;\n    transition: 0.2s linear;\n    &.move {\n        transform: translate(75px, calc(-100vh/2 + 102.5px));\n    }\n`\nS.Pile = styled.div`\n    position: relative;\n    width: 250px;\n    height: 250px;\n`\n\nS.Card = styled.img`\n    position: absolute;\n    right: 0;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    width: 100px;\n    transform: ${props => `rotate(${props.skew}deg) translate(${props.translateX}px, ${props.translateY}px)`};\n    border: 1px solid black;\n    border-radius: 15px;\n`\n\nS.Name = styled.h1`\n\n`\n\nS.StartButton = styled.button`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100px;\n    height: 50px;\n`\n\nexport default S","import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { withFirebase } from \"../Firebase\"\nimport S from \"./style\"\n\nclass Game extends Component {\n    unsubscribe = null\n    componentDidMount() {\n        const playerId = localStorage.getItem(\"id\")\n        document.addEventListener(\"keydown\", (e) => {\n            if(this.props.phase === \"idle\" && e.which === 38 && playerId === this.props.whoseTurn) {\n                this.prepareCard()\n            } else if(this.props.phase === \"idle\" && e.which === 32) {\n                let slapSound = new Audio(\"audio/slap.mp3\");\n                slapSound.play();\n                this.prepareSlap()\n            }\n        })\n    }\n    startGame = () => {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                let updatedPlayers = snap.data().players\n                let randomNum = Math.floor(Math.random() * updatedPlayers.length)\n                let whoseTurn = updatedPlayers[randomNum].id\n                let pile = this.props.deck\n                updatedPlayers.forEach(player => {\n                    player.hand = pile.splice(0, Math.floor(52/this.props.players.length))\n                })\n                console.log(pile)\n                updatedPlayers[randomNum].hand = updatedPlayers[randomNum].hand.concat(pile)\n                this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, whoseTurn, phase: \"idle\"})\n            })\n    }\n    prepareCard = () => {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                this.props.firebase.findRoom(snap.id).update({phase: \"playing\"})\n                setTimeout(() => {\n                    // this.props.firebase.findRoom(snap.id).update({phase: \"idle\"})\n                    this.placeCard()\n                }, 100)\n            })\n    }\n    placeCard = () => {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                const playerId = localStorage.getItem(\"id\")\n                // if(playerId === snap.data().whoseTurn) {\n                    let updatedPlayers = snap.data().players\n                    let updatedPile = snap.data().pile\n                    let updatedTurn = null\n                    let royalCount = null\n                    let whoseRoyal = null\n                    let phase = \"idle\"\n                    for(let i = 0; i < updatedPlayers.length; i++) {\n                        if(updatedPlayers[i].id === playerId) {\n                            let updatedHand = updatedPlayers[i].hand\n                            let placedCard = updatedHand.pop()\n                            placedCard.skew = (Math.random() * 100)-50\n                            placedCard.translateX = (Math.random() * 30)-15\n                            placedCard.translateY = (Math.random() * 30)-15\n                            updatedPile.push(placedCard)\n                            updatedPlayers[i].hand = updatedHand\n                            royalCount = placedCard.rank === \"jack\" ? 1 : placedCard.rank === \"queen\" ? 2 : placedCard.rank === \"king\" ? 3 : placedCard.rank === \"ace\" ? 4 : null\n                            whoseRoyal = royalCount > 0 ? playerId : snap.data().whoseRoyal\n                            updatedTurn = i === updatedPlayers.length-1 ? updatedPlayers[0].id : updatedPlayers[i+1].id\n                        }\n                    }\n                    if(snap.data().royalCount > 1 && !royalCount) {\n                        console.log(\"i went first\")\n                        royalCount = snap.data().royalCount - 1\n                        updatedTurn = localStorage.getItem(\"id\")\n                    } else if(snap.data().royalCount === 1 && !royalCount) {\n                        console.log(\"i went 2nd\")\n                        this.unsubscribe = setTimeout(() => {\n                            for(let i = 0; i < updatedPlayers.length; i++) {\n                                if(updatedPlayers[i].id === snap.data().whoseRoyal) {\n                                    const updatedHand = updatedPlayers[i].hand.reverse().concat(updatedPile)\n                                    updatedPlayers[i].hand = updatedHand.reverse()\n                                    updatedPile = []\n                                    whoseRoyal = null\n                                    royalCount = null\n                                    this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, royalCount, whoseRoyal, whoseTurn: updatedTurn, phase})\n                                    return\n                                }\n                            }\n                        }, 1000)\n                    }\n                    this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, royalCount, whoseRoyal, whoseTurn: updatedTurn, phase})\n                // } else {\n                //     console.log(\"not your turn\")\n                // }\n            })\n    }\n    prepareSlap = () => {\n        const playerId = localStorage.getItem(\"id\")\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                this.props.firebase.findRoom(snap.id).update({phase: \"slapping\", whoseSlapping:  [playerId]})\n                setTimeout(() => {\n                    this.slap()\n                },100)\n            })\n    }\n    slap = () => {\n        const playerId = localStorage.getItem(\"id\")\n        let pile = [...this.props.pile]\n        if(pile.length <= 1 || (pile[pile.length-1].rank !== pile[pile.length-2].rank && pile.length === 2)) {\n            this.burn()\n            return\n        }\n        if(pile[pile.length-1].rank === pile[pile.length-2].rank || pile[pile.length-1].rank === pile[pile.length-3].rank) {\n            clearTimeout(this.unsubscribe)\n            this.props.firebase.findRoom(this.props.match.params.id).get()\n                .then(snap => {\n                    let updatedPlayers = snap.data().players\n                    let whoseRoyal = null\n                    let royalCount = null\n                    let phase = \"idle\"\n                    for(let i = 0; i < updatedPlayers.length; i++) {\n                        if(updatedPlayers[i].id === playerId) {\n                            const updatedHand = updatedPlayers[i].hand.reverse().concat(pile)\n                            updatedPlayers[i].hand = updatedHand.reverse()\n                        }\n                    }\n                    this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: [], royalCount, whoseRoyal, whoseTurn: playerId, phase, whoseSlapping: []})\n                })\n        } else {\n            if(this.unsubscribe) {\n                clearTimeout(this.unsubscribe)\n            }\n            this.burn()\n            if(this.unsubscribe) {\n                this.createDelay()\n            }\n        }\n    }\n    burn = () => {\n        const playerId = localStorage.getItem(\"id\")\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                let updatedPlayers = snap.data().players\n                let updatedPile = snap.data().pile\n                let phase = \"idle\"\n                for(let i = 0; i < updatedPlayers.length; i++) {\n                    if(updatedPlayers[i].id === playerId) {\n                        let updatedHand = updatedPlayers[i].hand\n                        const burnedCard = updatedHand.pop()\n                        burnedCard.skew = (Math.random() * 360)-180\n                        burnedCard.translateX = (Math.random() * 30)-15\n                        burnedCard.translateY = (Math.random() * 30)-15\n                        updatedPile.unshift(burnedCard)\n                        updatedPlayers[i].hand = updatedHand\n                    }\n                }\n                this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, phase, whoseSlapping: []})\n            })\n    }\n    createDelay = () => {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                let updatedPlayers = snap.data().players\n                let updatedPile = snap.data().pile\n                let royalCount = null\n                let whoseRoyal = null\n                let phase = \"idle\"\n                this.unsubscribe = setTimeout(() => {\n                    for(let i = 0; i < updatedPlayers.length; i++) {\n                        if(updatedPlayers[i].id === snap.data().whoseRoyal) {\n                            const updatedHand = updatedPlayers[i].hand.reverse().concat(updatedPile)\n                            updatedPlayers[i].hand = updatedHand.reverse()\n                            updatedPile = []\n                            whoseRoyal = null\n                            royalCount = null\n                            this.props.firebase.findRoom(snap.id).update({players: updatedPlayers, pile: updatedPile, royalCount, whoseRoyal, phase})\n                            return\n                        }\n                    }\n                }, 1000)\n            })\n    }\n    rotateIds = (id, arr) => {\n        let updatedArr = [...arr]\n        if(this.props.checkIfExists(id, updatedArr)) {\n            while(updatedArr[0].id !== id) {\n                updatedArr.unshift(updatedArr.pop())\n            }\n        } else {\n            console.log(\"id not found\")\n        }\n        return updatedArr\n    }\n    render() {\n        const playerId = localStorage.getItem(\"id\")\n        const players = this.rotateIds(playerId, this.props.players).map((player, i, arr) => {\n            const cardBacks = player.hand.slice(0, 1).map((card, i) => {\n                return(\n                    <S.CardBack className={this.props.phase === \"playing\" && this.props.whoseTurn === player.id && i === 0 ? \"move\" : \"\"} key={i} layer={i} src=\"images/back2.png\"></S.CardBack>\n                )\n            })\n            return(\n                <S.PlayerContainer key={i} position={i === 0 ? \"bottom\" : i === 1 && arr.length === 2 ? \"top\" : i === 1 && arr.length === 3 || i === 1 && arr.length === 4 ? \"left\" : i === 2 && arr.length === 3 ? \"right\" : i === 2 && arr.length === 4 ? \"top\" : \"right\"}>\n                    <S.Container2 position={i === 0 ? \"bottom\" : i === 1 && arr.length === 2 ? \"top\" : i === 1 && arr.length === 3 || i === 1 && arr.length === 4 ? \"left\" : i === 2 && arr.length === 3 ? \"right\" : i === 2 && arr.length === 4 ? \"top\" : \"right\"}>\n                        <S.CardContainer>\n                            {cardBacks}\n                        </S.CardContainer>\n                        <S.Hand src=\"images/hand.png\" className={this.props.phase === \"slapping\" && this.props.whoseSlapping.indexOf(player.id) >= 0 ? \"move\" : \"\"}></S.Hand>\n                        {console.log(this.props.whoseSlapping)}\n                    </S.Container2>\n                    <S.Name>{player.name}</S.Name>\n                    <h1>{player.hand.length}</h1>\n                </S.PlayerContainer>\n            )\n        })\n        const pile = this.props.pile.map((card, i) => {\n            return(\n                    <S.Card key={i} skew={card.skew} translateX={card.translateX} translateY={card.translateY} src={card.imgUrl}></S.Card>\n            )\n        })\n        return(\n            <S.Container1>\n                <S.StartButton disabled={this.props.phase === \"idle\" || this.props.phase === \"playing\" ? true : false} onClick={() => this.startGame()}>Start</S.StartButton>\n                {players}\n                <S.Pile>\n                    {pile}\n                </S.Pile>\n            </S.Container1>\n        )\n    }\n}\n\nexport default withRouter(withFirebase(Game))","const cards = [\n\t{\n\t\trank: \"two\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/2D.png\",\n\t\tid: \"#2oD\"\n\t},\n\t{\n\t\trank: \"two\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/2H.png\",\n\t\tid: \"#2oH\"\n\t},\n\t{\n\t\trank: \"two\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/2C.png\",\n\t\tid: \"#2oC\"\n\t},\n\t{\n\t\trank: \"two\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/2S.png\",\n\t\tid: \"#2oS\"\n\t},\n\t{\n\t\trank: \"three\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/3D.png\",\n\t\tid: \"#3oD\"\n\t},\n\t{\n\t\trank: \"three\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/3H.png\",\n\t\tid: \"#3oH\"\n\t},\n\t{\n\t\trank: \"three\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/3C.png\",\n\t\tid: \"#3oC\"\n\t},\n\t{\n\t\trank: \"three\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/3S.png\",\n\t\tid: \"#3oS\"\n\t},\n\t{\n\t\trank: \"four\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/4D.png\",\n\t\tid: \"#4oD\"\n\t},\n\t{\n\t\trank: \"four\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/4H.png\",\n\t\tid: \"#4oH\"\n\t},\n\t{\n\t\trank: \"four\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/4C.png\",\n\t\tid: \"#4oC\"\n\t},\n\t{\n\t\trank: \"four\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/4S.png\",\n\t\tid: \"#4oS\"\n\t},\n\t{\n\t\trank: \"five\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/5D.png\",\n\t\tid: \"#5oD\"\n\t},\n\t{\n\t\trank: \"five\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/5H.png\",\n\t\tid: \"#5oH\"\n\t},\n\t{\n\t\trank: \"five\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/5C.png\",\n\t\tid: \"#5oC\"\n\t},\n\t{\n\t\trank: \"five\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/5S.png\",\n\t\tid: \"#5oS\"\n\t},\n\t{\n\t\trank: \"six\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/6D.png\",\n\t\tid: \"#6oD\"\n\t},\n\t{\n\t\trank: \"six\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/6H.png\",\n\t\tid: \"#6oH\"\n\t},\n\t{\n\t\trank: \"six\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/6C.png\",\n\t\tid: \"#6oC\"\n\t},\n\t{\n\t\trank: \"six\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/6S.png\",\n\t\tid: \"#6oS\"\n\t},\n\t{\n\t\trank: \"seven\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/7D.png\",\n\t\tid: \"#7oD\"\n\t},\n\t{\n\t\trank: \"seven\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/7H.png\",\n\t\tid: \"#7oH\"\n\t},\n\t{\n\t\trank: \"seven\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/7C.png\",\n\t\tid: \"#7oC\"\n\t},\n\t{\n\t\trank: \"seven\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/7S.png\",\n\t\tid: \"#7oS\"\n\t},\n\t{\n\t\trank: \"eight\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/8D.png\",\n\t\tid: \"#8oD\"\n\t},\n\t{\n\t\trank: \"eight\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/8H.png\",\n\t\tid: \"#8oH\"\n\t},\n\t{\n\t\trank: \"eight\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/8C.png\",\n\t\tid: \"#8oC\"\n\t},\n\t{\n\t\trank: \"eight\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/8S.png\",\n\t\tid: \"#8oS\"\n\t},\n\t{\n\t\trank: \"nine\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/9D.png\",\n\t\tid: \"#9oD\"\n\t},\n\t{\n\t\trank: \"nine\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/9H.png\",\n\t\tid: \"#9oH\"\n\t},\n\t{\n\t\trank: \"nine\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/9C.png\",\n\t\tid: \"#9oC\"\n\t},\n\t{\n\t\trank: \"nine\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/9S.png\",\n\t\tid: \"#9oS\"\n\t},\n\t{\n\t\trank: \"ten\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/10D.png\",\n\t\tid: \"#10oD\"\n\t},\n\t{\n\t\trank: \"ten\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/10H.png\",\n\t\tid: \"#10oH\"\n\t},\n\t{\n\t\trank: \"ten\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/10C.png\",\n\t\tid: \"#10oC\"\n\t},\n\t{\n\t\trank: \"ten\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/10S.png\",\n\t\tid: \"#10oS\"\n\t},\n\t{\n\t\trank: \"jack\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/JD.png\",\n\t\tid: \"#JoD\"\n\t},\n\t{\n\t\trank: \"jack\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/JH.png\",\n\t\tid: \"#JoH\"\n\t},\n\t{\n\t\trank: \"jack\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/JC.png\",\n\t\tid: \"#JoC\"\n\t},\n\t{\n\t\trank: \"jack\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/JS.png\",\n\t\tid: \"#JoS\"\n\t},\n\t{\n\t\trank: \"queen\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/QD.png\",\n\t\tid: \"#QoD\"\n\t},\n\t{\n\t\trank: \"queen\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/QH.png\",\n\t\tid: \"#QoH\"\n\t},\n\t{\n\t\trank: \"queen\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/QC.png\",\n\t\tid: \"#QoC\"\n\t},\n\t{\n\t\trank: \"queen\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/QS.png\",\n\t\tid: \"#QoS\"\n\t},\n\t{\n\t\trank: \"king\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/KD.png\",\n\t\tid: \"#KoD\"\n\t},\n\t{\n\t\trank: \"king\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/KH.png\",\n\t\tid: \"#KoH\"\n\t},\n\t{\n\t\trank: \"king\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/KC.png\",\n\t\tid: \"#KoC\"\n\t},\n\t{\n\t\trank: \"king\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/KS.png\",\n\t\tid: \"#KoS\"\n\t},\n\t{\n\t\trank: \"ace\",\n\t\tsuit: \"diamonds\",\n\t\timgUrl: \"images/AD.png\",\n\t\tid: \"#AoD\"\n\t},\n\t{\n\t\trank: \"ace\",\n\t\tsuit: \"hearts\",\n\t\timgUrl: \"images/AH.png\",\n\t\tid: \"#AoH\"\n\t},\n\t{\n\t\trank: \"ace\",\n\t\tsuit: \"clubs\",\n\t\timgUrl: \"images/AC.png\",\n\t\tid: \"#AoC\"\n\t},\n\t{\n\t\trank: \"ace\",\n\t\tsuit: \"spades\",\n\t\timgUrl: \"images/AS.png\",\n\t\tid: \"#AoS\"\n\t}\n]\n\nexport default cards","import React, { Component } from \"react\"\nimport Game from \"../Game\"\nimport { withFirebase } from \"../Firebase\"\nimport { withRouter } from \"react-router-dom\"\nimport cards from \"./cards\"\n\nclass Room extends Component {\n    state = {\n        players: [],\n        deck: [],\n        pile: [],\n        whoseTurn: \"\",\n        royalCount: null,\n        whoseRoyal: null,\n        phase: \"\",\n        whoseSlapping: []\n    }\n    componentDidMount() {\n        this.props.firebase.findRoom(this.props.match.params.id).get()\n            .then(snap => {\n                const randomId = this.generateRandomId()\n                if(snap.exists) {\n                    this.props.firebase.findRoom(this.props.match.params.id).get()\n                        .then(snap => {\n                            if(!this.checkIfExists(randomId, snap.data().players)) {\n                                this.props.firebase.findRoom(snap.id).update({\n                                    players: [...snap.data().players, \n                                        {\n                                            id: randomId, \n                                            name: `player${snap.data().players. length+1}`,\n                                            hand: []\n                                        }]\n                                })\n                            }\n                        })\n                } else {\n                    this.props.firebase.createRoom().doc(this.props.match.params.id).set({\n                        players: [{id: randomId, name: \"player1\", hand: []}], \n                        master: randomId, \n                        deck: [...this.shuffle(cards)],\n                        pile: [],\n                        royalCount: null,\n                        whoseRoyal: null,\n                        whoseTurn: \"\",\n                        phase: \"waiting\",\n                        whoseSlapping: []\n                    })\n                }\n                this.props.firebase.findRoom(this.props.match.params.id)\n                    .onSnapshot(snapshot => {\n                        this.setState({\n                            players: snapshot.data().players,\n                            deck: snapshot.data().deck,\n                            pile: snapshot.data().pile,\n                            whoseTurn: snapshot.data().whoseTurn,\n                            phase: snapshot.data().phase,\n                            whoseSlapping: snapshot.data().whoseSlapping\n                        })\n                    })\n            })\n    }\n    generateRandomId = () => {\n        let randomId = localStorage.getItem(\"id\") ? localStorage.getItem(\"id\") : Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n        return randomId\n    }\n    checkIfExists = (id, arr) => {\n        for (let i = 0; i < arr.length; i++) {\n            if (arr[i].id === id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    shuffle = (a) => {\n        for (let i = a.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let x = a[i];\n            a[i] = a[j];\n            a[j] = x;\n        }\n        return a;\n    }\n    render() {\n        return(\n            <Game players={this.state.players} deck={this.state.deck} pile={this.state.pile} whoseTurn={this.state.whoseTurn} phase={this.state.phase} whoseSlapping={this.state.whoseSlapping} checkIfExists={this.checkIfExists}/>\n        )\n    }\n}\n\nexport default withRouter(withFirebase(Room))","import styled from \"styled-components\"\n\nconst S = {}\n\nS.Container1 = styled.div`\n    height: 100vh;\n    width: 100vw;\n`\n\nexport default S","import React, { Component } from 'react';\nimport Room from \"../Room\"\nimport { Route, Switch, withRouter } from \"react-router-dom\"\nimport { withFirebase } from \"../Firebase\"\nimport S from \"./style\"\n\nclass App extends Component {\n    render() {\n        return (\n            <Switch>\n                <S.Container1>\n                    <Route exact path=\"/:id\" render={() => <Room />}></Route>\n                </S.Container1>\n            </Switch>\n        )\n    }\n}\n\nexport default withRouter(withFirebase(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport Firebase, { FirebaseContext } from './Components/Firebase';\n\nReactDOM.render(\n    <Router>\n        <FirebaseContext.Provider value={new Firebase()}>\n            <App />\n        </FirebaseContext.Provider>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}